import{defaultKeymap as e,indentWithTab as t}from"@codemirror/commands";import{indentUnit as n}from"@codemirror/language";import{StateEffect as o,EditorState as i}from"@codemirror/state";import{EditorView as s,keymap as a}from"@codemirror/view";var r=[],l=(e={})=>{let t=((e,t)=>{let n,o=[],i={lc:0,l:t||0,value:e,set(e){i.value=e,i.notify()},get:()=>(i.lc||i.listen((()=>{}))(),i.value),notify(e){n=o;let t=!r.length;for(let t=0;t<n.length;t+=2)r.push(n[t],i.value,e,n[t+1]);if(t){for(let e=0;e<r.length;e+=4){let t=!1;for(let n=e+7;n<r.length;n+=4)if(r[n]<r[e+3]){t=!0;break}t?r.push(r[e],r[e+1],r[e+2],r[e+3]):r[e](r[e+1],r[e+2])}r.length=0}},listen:(e,t)=>(o===n&&(o=o.slice()),i.lc=o.push(e,t||i.l)/2,()=>{o===n&&(o=o.slice());let t=o.indexOf(e);~t&&(o.splice(t,2),i.lc--,i.lc||i.off())}),subscribe(e,t){let n=i.listen(e,t);return e(i.value),n},off(){}};return i})(e);return t.setKey=function(e,n){void 0===n?e in t.value&&(t.value={...t.value},delete t.value[e],t.notify(e)):t.value[e]!==n&&(t.value={...t.value,[e]:n},t.notify(e))},t},u=()=>l({view:null,extensions:null,value:null}),c=(e,t)=>{if(!t)throw new Error("No options provided. At least `value` is required.");let n,i,{value:a,setup:r,lang:l,instanceStore:u,useTabs:c=!1,tabSize:f=2,theme:h,styles:m,extensions:v}=t,d=new Promise((e=>n=e)),g=[];const w=function(e,t,n=!1){let o;return function(...i){const s=this;function a(){n||e.apply(s,i),o=null}o?clearTimeout(o):n&&e.apply(s,i),o=setTimeout(a,t||100)}}((function(){const t=i.state.doc.toString();t!==a&&(a=t,e.dispatchEvent(new CustomEvent("codemirror:change",{detail:a})),u?.setKey("value",a))}),50);return(async()=>{g=await p(l,r,c,f,h,m,v),i=new s({doc:a,extensions:g,parent:e,dispatch(e){i.update([e]),e.docChanged&&w()}}),u?.set({view:i,extensions:g,value:a}),n()})(),{async update(e){await d,l=e.lang,r=e.setup,c=e.useTabs??!1,f=e.tabSize??2,h=e.theme,v=e.extensions,g=await p(l,r,c,f,h,m,v),i.dispatch({effects:o.reconfigure.of(g)}),a!==e.value&&(a=e.value,i.dispatch({changes:{from:0,to:i.state.doc.length,insert:a}})),u?.set({view:i,extensions:g,value:a})},destroy(){d.then((()=>{i?.destroy()}))}}};async function p(o,r,l=!1,u=2,c,p,f){const h=[a.of([...e,...l?[t]:[]]),i.tabSize.of(u),n.of(l?"\t":" ".repeat(u))];return await async function(e,{setup:t}){if(t){const n=await import("codemirror");if("basic"===t)e.push(n.basicSetup);else{if("minimal"!==t)throw new Error("`setup` can only be `basic` or `minimal`. If you wish to provide another setup, pass through `extensions` prop.");e.push(n.minimalSetup)}}}(h,{setup:r}),o&&h.push(o),c&&h.push(c),p&&h.push(s.theme(p)),[h,f??[]]}export{c as codemirror,u as withCodemirrorInstance};